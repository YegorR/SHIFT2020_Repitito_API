#### API


GET /user - получить список пользователей 
Параметры: 
onlyTeacher - только репетиторы, принимает значение true/false, по умолчанию - false 
faculty - только с данных факультетов, по умолчанию - null, позволяется несколько параметров, макс. длина - 64 
course - только с данных курсов, по умолчанию - null, значения 1..10, позволяется несколько параметров 
subject - только обучающие данным предметам, по умолчанию - null, позволется несколько параметров, макс. длина - 64 
degree - только данного образования, по умолчанию - null, позволяется несколько параметров, макс. длина - 64 
search - искать с такой строкой (например, в описании), по умолчанию - null, макс. длина - 256 
Ответ:
[
    { 
    	"id": 1,
    	"firstName": "Иван",
	"lastName": "Иванов",
	"paronym": "Иванович",
	"price": 1000	//предполагается, что работаем только в одной валюте,
	"photo" : null //пока под вопросом, зарезервировано
    },
    {...},
    ...
]

GET /user/{id} - получить пользователя с id
Ответ:
{
	"id": 1,
	"email": "email@mail.ru",	
	"firstName": "Иван",
	"lastName": "Иванов",
	"paronym": "Иванович",
	"faculty": "Факультет систем управления",
	"course": 3,
	"subjects" : ["Матан", "Алгебра", "Программирование", "Философия"],
	"degree": "бакалавр",
	"about": "Самый крутой репетитор в мире :)",
	"isTeacher" : true // true/false
	"price" : 1000	// если isTeacher=false, то price=null
	"photo": null //Пока под вопросом, поэтому зарезервировано
}

POST /user - создать пользователя - регистрация
Тело запроса:
{
	"email": "email@mail.ru",
	"password" : "password", //нешифрованный/нехешированный
	"firstName": "Иван",
	"lastName": "Иванов",
	"paronym": "Иванович",	//nullable
	"faculty": "Факультет систем управления", //nullable
	"course": 3,	//nullable
	"subjects" : ["Матан", "Алгебра", "Программирование", "Философия"],	//nullable
	"degree": "бакалавр",	//nullable
	"about": "Самый крутой репетитор в мире :)",	//nullable
	"isTeacher" : true // true/false
	"price" : 1000	// если isTeacher=false, то price игнорируется
	"photo": null //Пока под вопросом, поэтому зарезервировано
}
PUT /user/{id} - изменить пользователя c id 
Тело запроса:
{
	"email": "email@mail.ru",	//если null, то он не меняется
	"password" : "password", //нешифрованный/нехешированный; если null, то он не меняется
	"firstName": "Иван",
	"lastName": "Иванов",
	"paronym": "Иванович",	//nullable
	"faculty": "Факультет систем управления", //nullable
	"course": 3,	//nullable
	"subjects" : ["Матан", "Алгебра", "Программирование", "Философия"],	//nullable
	"degree": "бакалавр",	//nullable
	"about": "Самый крутой репетитор в мире :)",	//nullable
	"isTeacher" : true // true/false
	"price" : 1000	// если isTeacher=false, то price игнорируется
	"photo": null //Пока под вопросом, поэтому зарезервировано
}
 

DELETE /user/{id} - удалить пользователя; в случае успешного удаления вернёт 204 без тела


POST /user/{id}/review - создать обзор на пользователя с id

GET /user/{id}/review - получить обзоры на данного пользователя
Ответ: 
[
	//review 
]

GET /user/{id}/review/{id} - получить обзор на данного пользователя с данным id
Ответ:
{
	"id": 10,
	"mark": 10,
	"comment": "Иван Иванов - молодец, учитель, лидер и борец",
	"reviewer_id" : 1,
	"teacher_id" : 2
}

