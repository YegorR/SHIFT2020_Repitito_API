#### API

Аутентификация:

POST /login
Тело запроса:
{
    "email" : "email@mail.com",
    "password" : "pass12345"	//нехешированный
}
Ответ:
{
	"successful" : true // true, если авторизация успешная, false, если нет
	"token" : "u123kf" //если successful false, то null
	"user" : {	//если successful false, то null
		"id": 1,
		"email": "email@mail.ru",	
		"firstName": "Иван",
		"lastName": "Иванов",
		"patronymic": "Иванович",
		"faculty": "Факультет систем управления",
		"course": 3,
		"subjects" : ["Матан", "Алгебра", "Программирование", "Философия"],
		"degree": "бакалавр",
		"about": "Самый крутой репетитор в мире :)",
		"isTeacher" : true // true/false
		"price" : 1000	// если isTeacher=false, то price=null
		"photo": null //Пока под вопросом, поэтому зарезервировано
	}
}
Для всех дальнейших операций требуется token в http заголовке Authorization,
иначе код возврата 401 - Unauthorized (кроме POST /user)

POST /logout - выйти пользователю; делает токен недействительным

GET /user - получить список пользователей 
Параметры: 
onlyTeacher - только репетиторы, принимает значение true/false, по умолчанию - false 
faculty - только с данных факультетов, по умолчанию - null, макс. длина - 64 
course - только с данных курсов, по умолчанию - null, значения 1..10, позволяется несколько параметров 
subject - только обучающие данным предметам, по умолчанию - null, позволется несколько параметров
degree - только данного образования, по умолчанию - null, позволяется несколько параметров, макс. длина - 64 
search - искать с такой строкой (например, в описании), по умолчанию - null, макс. длина - 256,
limit - максимальное количество возвращаемых пользователей в теле ответа, по умолч. - 10, макс. - 50,
offset - смещение, с которого начинается возвращаться пользователи в теле ответа, по умолч. - 0
Ответ:
[
    { 
    	"id": 1,
    	"firstName": "Иван",
	"lastName": "Иванов",
	"patronymic": "Иванович",
	"price": 1000,	//предполагается, что работаем только в одной валюте,
	"avgMark": 3.4,	//0... 5.0, если нет пока обзоров - null  
	"photo" : null //пока под вопросом, зарезервировано
    },
    {...},
    ...
]

GET /user/{id} - получить пользователя с id
Ответ:
{
	"id": 1,
	"email": "email@mail.ru",	
	"firstName": "Иван",
	"lastName": "Иванов",
	"patronymic": "Иванович",
	"faculty": "Факультет систем управления",
	"course": 3,
	"subjects" : ["Матан", "Алгебра", "Программирование", "Философия"],
	"degree": "бакалавр",
	"about": "Самый крутой репетитор в мире :)",
	"isTeacher" : true // true/false
	"price" : 1000	// если isTeacher=false, то price=null
	"photo": null //Пока под вопросом, поэтому зарезервировано
}

POST /user - создать пользователя - регистрация
Тело запроса:
{
	"email": "email@mail.ru",
	"password" : "password", //нешифрованный/нехешированный
	"firstName": "Иван",
	"lastName": "Иванов",
	"patronymic": "Иванович",	//nullable
	"faculty": "Факультет систем управления", //nullable
	"course": 3,	//nullable
	"subjects" : [1, 2, 4, 5],	//nullable
	"degree": "бакалавр",	//nullable
	"about": "Самый крутой репетитор в мире :)",	//nullable
	"isTeacher" : true // true/false
	"price" : 1000	// если isTeacher=false, то price игнорируется
	"photo": null //Пока под вопросом, поэтому зарезервировано
}

PUT /user/{id} - изменить пользователя c id
Тело запроса:
{
	"email": "email@mail.ru",	//если null, то он не меняется
	"password" : "password", //нешифрованный/нехешированный; если null, то он не меняется
	"firstName": "Иван",
	"lastName": "Иванов",
	"patronymic": "Иванович",	//nullable
	"faculty": "Факультет систем управления", //nullable
	"course": 3,	//nullable
	"subjects" : [1, 4, 5],	//nullable
	"degree": "бакалавр",	//nullable
	"about": "Самый крутой репетитор в мире :)",	//nullable
	"isTeacher" : true // true/false
	"price" : 1000	// если isTeacher=false, то price игнорируется
	"photo": null //Пока под вопросом, поэтому зарезервировано
}
Применять метод может только сам пользователь, иначе код возврата 403 - Forbidden

DELETE /user/{id} - удалить пользователя; в случае успешного удаления вернёт 204 без тела
Применять метод может только сам пользователь, иначе код возврата 403 - Forbidden


POST /user/{id}/review - создать обзор на пользователя с id
Тело запроса:
{
	"mark" : 3, 	//1, 2..5
	"comment" : "Комментарий", 
	"reviewer_id": 3
}

GET /user/{id}/review - получить обзоры на данного пользователя
Ответ: 
[
	{
		"id": 10,
		"mark": 5,	// 1, 2..5
		"comment": "Иван Иванов - молодец, учитель, лидер и борец",
		"reviewer_id" : 1,
		"teacher_id" : 2
	},
	{...},
	...
]


GET /subjects - получить список всех доступных предметов
Ответ:
[
	{
		"id" : 1,
		"name" : "Матан"
	},
	{...},
	...
]
